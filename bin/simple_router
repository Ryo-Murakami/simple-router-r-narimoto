#!/usr/bin/env ruby

require 'rubygems'
require 'bundler'
Bundler.setup :default

require 'gli'
require 'trema'

module SimpleRouterApp
  extend GLI::App

  desc 'Print routing table'
  arg_name '@routing_table'
  command :printRT do |c|
    c.desc 'Location to find socket files'
    c.flag [:S, :socket_dir], default_value: Trema::DEFAULT_SOCKET_DIR

    c.action do |_global_options, options, args|
      @routing_table = Trema.trema_process('SimpleRouter', options[:socket_dir]).controller.
        print_routing_table()
      p @routing_table
    end
  end

  desc 'Add routing table entry'
  arg_name 'destination_ip netmask_length next_hop'
  command :AddRT do |c|
    c.desc 'Location to find socket files'
    c.flag [:S, :socket_dir], default_value: Trema::DEFAULT_SOCKET_DIR

    c.action do |_global_options, options, args|
      destination_ip = args[0]
      netmask_length = args[1].to_i
      next_hop = args[2]
      Trema.trema_process('SimpleRouter', options[:socket_dir]).controller.
        add_routing_table_entry(destination_ip, netmask_length, port2)
    end
  end

  desc 'Delete routing table entry'
  arg_name 'destination_ip netmask_length'
  command :DelRT do |c|
    c.desc 'Location to find socket files'
    c.flag [:S, :socket_dir], default_value: Trema::DEFAULT_SOCKET_DIR

    c.action do |_global_options, options, args|
      destination_ip = args[0]
      netmask_length = args[1].to_i
      next_hop = args[2]
      Trema.trema_process('SimpleRouter', options[:socket_dir]).controller.
        delete_routing_table_entry(destination_ip, netmask_length)
    end
  end

  desc 'Print interface'
  arg_name 'interface'
  command :printInterface do |c|
    c.desc 'Location to find socket files'
    c.flag [:S, :socket_dir], default_value: Trema::DEFAULT_SOCKET_DIR

    c.action do |_global_options, options, args|
      interface = Trema.trema_process('SimpleRouter', options[:socket_dir]).controller.
        print_interface()
      interface.find do |each|
        p each
      end
    end
  end

  exit run(ARGV)
end
